# setup.yaml
---
- name: Setup Rocket.Chat and MongoDB
  hosts: localhost
  become: true
  tasks:
  - name: Ensure Rocket.Chat directory exists
    ansible.builtin.file:
      path: "/home/{{ ansible_user }}/rocket-chat"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0755"

  - name: Copy Rocket.Chat containerization files for MongoDB setup
    ansible.builtin.copy:
      src: "/root/seal-final/templates/"
      dest: "/home/{{ ansible_user }}/rocket-chat/"
      mode: "0755"
      remote_src: yes
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      recurse: yes

  - name: Create .env file for MongoDB
    ansible.builtin.copy:
      dest: "/home/{{ ansible_user }}/rocket-chat/.env"
      content: |
        MONGODB_VERSION=6.0
        MONGODB_REPLICA_SET_NAME=rs0
        MONGODB_ADVERTISED_HOSTNAME=ada-aja
        MONGODB_ENABLE_JOURNAL=true
        ALLOW_EMPTY_PASSWORD=no
        MONGODB_ROOT_USER=admin
        MONGODB_ROOT_PASSWORD=passworddevelopmentservermongodb12
        MONGODB_REPLICA_SET_KEY=3F1FCCBS0RhyuUm3AHcfbIQVYBqNPujFd2RqtvDxRL5g2HT0QVaJFoje0ws+L7
        MONGODB_HOST=ada-aja
        MONGODB_PORT_NUMBER=27017
        MONGODB_DATABASE=rocketchat
        MONGO_AUTH_SOURCE=admin
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0644"

  - name: Ensure .env file exists and is not empty
    ansible.builtin.stat:
      path: "/home/{{ ansible_user }}/rocket-chat/.env"
    register: env_file_stat

  - name: Fail if .env file does not exist or is empty
    ansible.builtin.fail:
      msg: ".env file does not exist or is empty. Please check the creation process."
    when: env_file_stat.stat.exists == false or env_file_stat.stat.size == 0

  - name: Debug the status of .env file
    ansible.builtin.debug:
      msg: ".env file is present and has content."
    when: env_file_stat.stat.exists == true and env_file_stat.stat.size > 0

  - name: Ensure nginx certificates directory exists
    ansible.builtin.file:
      path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs"
      state: directory
      mode: '0755'

  - name: Check if SSL certificate already exists
    ansible.builtin.stat:
      path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key"
    register: cert_stat

  - name: Generate SSL certificate and key if not exists
    ansible.builtin.command:
      cmd: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key -out /home/{{ ansible_user }}/rocket-chat/nginx/certs/server.crt -subj "/C=US/ST=State/L=City/O=Organization/OU=IT/CN=localhost"
    when: cert_stat.stat.exists == false

  - name: Set permissions for certificate files
    ansible.builtin.file:
      path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.crt"
      mode: '0644'

  - name: Set permissions for key files
    ansible.builtin.file:
      path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key"
      mode: '0600'

  - name: Start Rocket.Chat server with Docker Compose
    ansible.builtin.shell: >
      docker-compose -f /home/{{ ansible_user }}/rocket-chat/nginx-rochat.yml up -d
    register: docker_compose_up_chat
    changed_when: "'Starting' in docker_compose_up_chat.stdout or 'Creating' in docker_compose_up_chat.stdout"
